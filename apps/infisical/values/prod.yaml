---
infisical:
  enabled: true # -- Enable Infisical chart deployment
  name: infisical # -- Sets the name of the deployment within this chart

  # -- Automatically migrates new database schema when deploying
  autoDatabaseSchemaMigration: false

  databaseSchemaMigrationJob:
    image:
      # -- Image repository for migration wait job
      repository: ghcr.io/groundnuty/k8s-wait-for
      # -- Image tag version
      tag: no-root-v2.0

  # -- Custom annotations for Infisical pods
  podAnnotations: {}
  # -- Custom annotations for Infisical deployment
  deploymentAnnotations: {}
  # -- Number of pod replicas for high availability
  replicaCount: 3

  image:
    repository: infisical/infisical
    # -- Specific version tag of the Infisical image. View the latest version here https://hub.docker.com/r/infisical/infisical
    tag: "v0.122.0-postgres"

  kubeSecretRef: "infisical-secrets"

  service:
    # -- Custom annotations for Infisical service
    annotations: {}
    # -- Service type, can be changed based on exposure needs (e.g., LoadBalancer)
    type: ClusterIP
    # -- Optional node port for service when using NodePort type
    nodePort: ""

  resources:
    limits:
      memory: 600Mi
    requests:
      cpu: 350m

  extraVolumes:
    - name: postgres-ca-cert
      secret:
        secretName: raulstechtips-internal-ca-key-pair
        items:
          - key: ca.crt
            path: postgres-ca.crt

  extraVolumeMounts:
    - name: postgres-ca-cert
      mountPath: /etc/custom-certs
      readOnly: true

ingress:
  enabled: false
  nginx:
    enabled: false

postgresql:
  # -- Enables an in-cluster PostgreSQL deployment. To achieve HA for Postgres, we recommend deploying https://github.com/zalando/postgres-operator instead.
  enabled: false

  customURIParameters:
    enabled: true
    host: "pg-infisical-rw.infisical.svc.cluster.local"
    port: 5432
    database: "pg-infisical"
    username: "infisical-pg-admin"
    passwordSecret:
      name: "infisical-pg-admin-credentials-secret"
      key: "password"
    ssl:
      enabled: true
      mode: "verify-ca"
      rootCertPath: "/etc/custom-certs/postgres-ca.crt"

redis:
  enabled: false
    # -- Build a custom Redis connection string from parameters
  customURIParameters:
    # -- Set to true if using custom URI parameters for Redis connection
    enabled: true
    # -- Redis host
    host: "redis-infisical-master.infisical.svc.cluster.local"
    # -- Port for Redis connection. Default is 6379
    port: 6379
    # -- Secret containing Redis password
    passwordSecret:
      # -- Kubernetes secret name containing the Redis password
      name: "infisical-redis-admin-credentials-secret"
      # -- Key name in the Kubernetes secret that holds the Redis password
      key: "redis-password"
